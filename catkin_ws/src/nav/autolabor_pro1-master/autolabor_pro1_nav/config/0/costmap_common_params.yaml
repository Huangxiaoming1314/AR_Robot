# obstacle_range: 3.0 # the maximum range sensor reading that will result in an obstacle being put into the costmap
# raytrace_range: 4.0
# footprint: [[0.363, 0.29], [0.363, -0.29], [-0.363, -0.29], [-0.363, 0.29]]
# inflation_radius: 0.43
# map_topic: map
# # This parameter defines if move_base should periodically check if map was updated.
# subscribe_to_updates: false 
# observation_sources: laser_scan_sensor  # point_cloud_sensor
# laser_scan_sensor: {sensor_frame: base_laser, data_type: LaserScan, 
#     topic: scan, marking: true, clearing: true}
# global_frame: map
# robot_base_frame: base_footprint

# obstacle_range: 2.5
# raytrace_range: 3.0
# footprint: [[0.1, 0.1], [0.1, -0.1], [-0.1, -0.1], [-0.1, 0.1]]
# inflation_radius: 0.15
# map_topic: map
# subscribe_to_updates: true
# observation_sources: laser_scan_sensor
# laser_scan_sensor: {sensor_frame: laser_frame, data_type: LaserScan, 
#     topic: scan, marking: true, clearing: true}
# global_frame: map
# robot_base_frame: robot_base

# turtlebot
obstacle_range: 3.0
raytrace_range: 4.0
footprint: [[0.363, 0.29], [0.363, -0.29], [-0.363, -0.29], [-0.363, 0.29]]
inflation_radius: 0.43
max_obstacle_height: 0.6
min_obstacle_height: 0.0
observation_sources: laser_scan_sensor
laser_scan_sensor: {sensor_frame: base_laser, data_type: LaserScan,
    topic: scan, marking: true, clearing: true}
